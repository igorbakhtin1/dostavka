/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  DeliveryContract as PrismaDeliveryContract,
  Order as PrismaOrder,
  PerformerProfile as PrismaPerformerProfile,
} from "@prisma/client";

export class DeliveryContractServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.DeliveryContractCountArgs, "select">
  ): Promise<number> {
    return this.prisma.deliveryContract.count(args);
  }

  async deliveryContracts(
    args: Prisma.DeliveryContractFindManyArgs
  ): Promise<PrismaDeliveryContract[]> {
    return this.prisma.deliveryContract.findMany(args);
  }
  async deliveryContract(
    args: Prisma.DeliveryContractFindUniqueArgs
  ): Promise<PrismaDeliveryContract | null> {
    return this.prisma.deliveryContract.findUnique(args);
  }
  async createDeliveryContract(
    args: Prisma.DeliveryContractCreateArgs
  ): Promise<PrismaDeliveryContract> {
    return this.prisma.deliveryContract.create(args);
  }
  async updateDeliveryContract(
    args: Prisma.DeliveryContractUpdateArgs
  ): Promise<PrismaDeliveryContract> {
    return this.prisma.deliveryContract.update(args);
  }
  async deleteDeliveryContract(
    args: Prisma.DeliveryContractDeleteArgs
  ): Promise<PrismaDeliveryContract> {
    return this.prisma.deliveryContract.delete(args);
  }

  async getOrder(parentId: string): Promise<PrismaOrder | null> {
    return this.prisma.deliveryContract
      .findUnique({
        where: { id: parentId },
      })
      .order();
  }

  async getPerformerProfile(
    parentId: string
  ): Promise<PrismaPerformerProfile | null> {
    return this.prisma.deliveryContract
      .findUnique({
        where: { id: parentId },
      })
      .performerProfile();
  }
}
